{"version":3,"sources":["FeedOptions/FeedbackOptions.jsx","Section/Section.jsx","Statistics/Statistics.jsx","Feedback/Feedback.jsx","App/App.js","index.js"],"names":["FeedbackOptions","options","onLeaveFeedback","Object","keys","map","key","type","name","onClick","className","Section","children","title","Notification","message","Statistics","good","neutral","bad","total","positivePercentage","entries","value","Feedback","state","handleIncrement","event","setState","target","countTotalFeedback","countPositiveFeedbackPercentage","Math","floor","this","shortid","generate","Component","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qSASeA,EAPS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAChC,OAAQC,OAAOC,KAAKH,GAASI,KAAI,SAACC,GAAD,OAC7B,wBAAkBC,KAAK,SAASC,KAAMF,EAAKG,QAASP,EAAiBQ,UAAU,MAA/E,SAAsFJ,GAAzEA,OCGNK,EAPC,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAUC,EAAb,EAAaA,MAAb,OACZ,oCACI,6BAAKA,IACJD,M,QCHHE,EAAe,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OACnB,8BACE,4BAAIA,OAkCOC,MA9Bf,YAAwE,IAAlDC,EAAiD,EAAjDA,KAAMC,EAA2C,EAA3CA,QAASC,EAAkC,EAAlCA,IAAKC,EAA6B,EAA7BA,MAAOC,EAAsB,EAAtBA,mBAC/C,OAAID,EAAQ,EAER,qCACE,4CACA,gCACGjB,OAAOmB,QAAQ,CAAEL,OAAMC,UAASC,QAAOd,KAAI,mCAAEC,EAAF,KAAOiB,EAAP,YAC1C,8BACGjB,EADH,IACQ,+BAAOiB,MADPjB,MAIV,uCACQ,+BAAOc,MADP,SAGR,mDACoB,+BAAOC,MADnB,iBAQZ,qCACE,4CACA,cAAC,EAAD,CAAcN,QAAS,0BCvBzBS,E,4MACJC,MAAQ,CACNR,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPO,gBAAkB,SAAAC,GAChB,EAAKC,UAAS,iCACXD,EAAME,OAAOrB,KAAO,EAAKiB,MAAME,EAAME,OAAOrB,MAAQ,O,EAIzDsB,mBAAqB,WACnB,MAA+B,EAAKL,MAEpC,OAFA,EAAQR,KAAR,EAAcC,QAAd,EAAuBC,K,EAKzBY,gCAAkC,WAChC,IAAQd,EAAS,EAAKQ,MAAdR,KAER,OADsBe,KAAKC,MAAc,IAAPhB,EAAc,EAAKa,uB,4CAIvD,WACE,OACE,sBAA8BpB,UAAU,YAAxC,UACE,cAAC,EAAD,CAASG,MAAO,0BAChB,cAAC,EAAD,CACEZ,QAASiC,KAAKT,MACdvB,gBAAiBgC,KAAKR,kBAExB,cAAC,EAAD,CACET,KAAMiB,KAAKT,MAAMR,KACjBC,QAASgB,KAAKT,MAAMP,QACpBC,IAAKe,KAAKT,MAAMN,IAChBC,MAAOc,KAAKJ,qBACZT,mBAAoBa,KAAKH,sCAXnBI,IAAQC,gB,GA3BDC,aA4CRb,I,MCxCAc,MARf,WACE,OACE,qBAAK5B,UAAU,MAAf,SACE,cAAC,EAAD,OCAN6B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.bd31ebab.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\r\n    return (Object.keys(options).map((key) => (\r\n        <button key={key} type=\"button\" name={key} onClick={onLeaveFeedback} className=\"btn\">{key}</button>\r\n    ))\r\n    )\r\n};\r\n\r\nexport default FeedbackOptions;\r\n   \r\n// <button type=\"button\" className=\"btn\" onClick={this.btnGood}>\r\n    //       Good\r\n    //     </button>\r\n    //     <button type=\"button\" className=\"btn\" onClick={this.btnNeutral}>\r\n    //       Neutral\r\n    //     </button>\r\n    //     <button type=\"button\" className=\"btn\" onClick={this.btnBad}>\r\n    //       Bad\r\n    //     </button>","const Section = ({ children, title }) => (\r\n    <section>\r\n        <h1>{title}</h1>\r\n        {children}\r\n\r\n    </section>\r\n)\r\nexport default Section;\r\n","const Notification = ({ message }) => (\r\n  <div>\r\n    <p>{message}</p>\r\n  </div>\r\n);\r\n\r\nfunction Statistics({ good, neutral, bad, total, positivePercentage }) {\r\n  if (total > 0) {\r\n    return (\r\n      <>\r\n        <h2>Statistics</h2>\r\n        <div>\r\n          {Object.entries({ good, neutral, bad }).map(([key, value]) => (\r\n            <p key={key}>\r\n              {key}:<span>{value}</span>\r\n            </p>\r\n          ))}\r\n          <p key={'total'}>\r\n            Total:<span>{total}</span>\r\n          </p>\r\n          <p key={'percent'}>\r\n            Positive Feedback:<span>{positivePercentage}</span>\r\n          </p>\r\n        </div>\r\n      </>\r\n    );\r\n  } else {\r\n    return (\r\n      <>\r\n        <h2>Statistics</h2>\r\n        <Notification message={\"No feedback given\"} />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Statistics;\r\n","import React, { Component } from 'react';\r\nimport shortid from 'shortid';\r\n\r\nimport FeedbackOptions from '../FeedOptions';\r\nimport Section from '../Section';\r\nimport Statistics from '../Statistics';\r\n\r\nclass Feedback extends Component {\r\n  state = {\r\n    good: 0,\r\n    neutral: 0,\r\n    bad: 0,\r\n  };\r\n\r\n  handleIncrement = event => {\r\n    this.setState(() => ({\r\n      [event.target.name]: this.state[event.target.name] + 1,\r\n    }));\r\n  };\r\n\r\n  countTotalFeedback = () => {\r\n    const { good, neutral, bad } = this.state;\r\n    const total = good + neutral + bad;\r\n    return total;\r\n  };\r\n\r\n  countPositiveFeedbackPercentage = () => {\r\n    const { good } = this.state;\r\n    const positiveTotal = Math.floor((good * 100) / this.countTotalFeedback());\r\n    return positiveTotal;\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div key={shortid.generate()} className=\"container\">\r\n        <Section title={'Please leave feedback'} />\r\n        <FeedbackOptions\r\n          options={this.state}\r\n          onLeaveFeedback={this.handleIncrement}\r\n        />\r\n        <Statistics\r\n          good={this.state.good}\r\n          neutral={this.state.neutral}\r\n          bad={this.state.bad}\r\n          total={this.countTotalFeedback()}\r\n          positivePercentage={this.countPositiveFeedbackPercentage()}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Feedback;\r\n","import Feedback from '../Feedback';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Feedback />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App/App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}